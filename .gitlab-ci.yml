stages:
  - test
  - publish

image: node:14-alpine

variables:
  YARNRC_CONTENT: >
    npmRegistries:
      //server.nellman.net/api/v4/packages/npm/:
        npmAlwaysAuth: true
        npmAuthToken: ${CI_JOB_TOKEN}
      //server.nellman.net/api/v4/projects/6/packages/npm/:
        npmAlwaysAuth: true
        npmAuthToken: ${CI_JOB_TOKEN}

default:
  before_script:
    - apk add --update --no-cache python3 make gcc g++ && ln -sf python3 /usr/bin/python
    - echo "$YARNRC_CONTENT" >> .yarnrc.yml
    - yarn install --immutable

test-test-jasmine:
  stage: test
  rules:
    - if: $CI_COMMIT_TAG == null
  script:
    - yarn test
  parallel:
    matrix:
      - NODE_VERSION: [14, 16, 17]

test-check-types-tsc:
  stage: test
  rules:
    - if: $CI_COMMIT_TAG == null
  script:
    - cp ./fixtures/config.api.json ./config.api.json
    - yarn test:ci:check-types
  parallel:
    matrix:
      - NODE_VERSION: [14, 16, 17]

npm-audit:
  stage: test
  rules:
    - if: $CI_COMMIT_TAG == null
  script:
    - npm audit &2>1 > npm-audit.log
    - cat npm-audit.log
  artifacts:
    untracked: false
    expire_in: 1 year
    paths:
      - npm-audit.log

publish:
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - apk add jq curl
    - cp ./fixtures/config.api.json ./config.api.json
    - yarn test
    - yarn build:esm2020
    - yarn build:cjs
    - yarn build:types
    - jq 'del(.devDependencies) | del(.scripts) | del(.jest)' package.json > build/package.json
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}">.npmrc
    - npm publish ./build
    - NPM_VERSION=$(jq '.version' package.json -r)
    - >-
      NPM_TARBALL_URL=$(curl -H "JOB-TOKEN: ${CI_JOB_TOKEN}" ${CI_SERVER_URL}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/@ssrg-tools%2Fbase | jq ".versions[\"$NPM_VERSION\"].dist.tarball" -r)
    - >-
      curl -X POST -H "JOB-TOKEN: ${CI_JOB_TOKEN}" -H "Content-Type: application/json" -d "{\"tag_name\": \"${CI_COMMIT_TAG}\", \"name\": \"${CI_COMMIT_TAG}\", \"body\": \"${CI_COMMIT_MESSAGE//[$'\t\r\n\"']}\", \"released_at\": \"${CI_COMMIT_TIMESTAMP}\", \"assets\": {\"links\": [{\"name\": \"$(basename "$NPM_TARBALL_URL")\", \"url\": \"${NPM_TARBALL_URL}\"}]}}" "${CI_SERVER_URL}/api/v4/projects/${CI_PROJECT_ID}/releases" -v --show-error --fail
